# Script PowerShell para sincronizar documenta√ß√£o com Backstage TechDocs

param(
    [string]$BackstageUrl = "http://localhost:7007",
    [string]$BackstageToken = "",
    [string]$DocsDir = "docs/components"
)

Write-Host "üöÄ Sincronizando documenta√ß√£o com Backstage TechDocs..." -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Cyan

# Verificar se o token foi fornecido
if (-not $BackstageToken) {
    $BackstageToken = $env:BACKSTAGE_TOKEN
    if (-not $BackstageToken) {
        Write-Host "‚ùå BACKSTAGE_TOKEN n√£o configurado" -ForegroundColor Red
        Write-Host "Configure a vari√°vel de ambiente BACKSTAGE_TOKEN ou passe como par√¢metro" -ForegroundColor Yellow
        Write-Host "Exemplo: .\sync-backstage.ps1 -BackstageToken 'seu-token-aqui'" -ForegroundColor Yellow
        exit 1
    }
}

# Verificar se o diret√≥rio de documenta√ß√£o existe
if (-not (Test-Path $DocsDir)) {
    Write-Host "‚ùå Diret√≥rio de documenta√ß√£o n√£o encontrado: $DocsDir" -ForegroundColor Red
    exit 1
}

# Configurar vari√°veis de ambiente
$env:BACKSTAGE_URL = $BackstageUrl
$env:BACKSTAGE_TOKEN = $BackstageToken

Write-Host "üìã Configura√ß√µes:" -ForegroundColor Yellow
Write-Host "   Backstage URL: $BackstageUrl" -ForegroundColor White
Write-Host "   Docs Directory: $DocsDir" -ForegroundColor White
Write-Host "   Token: $($BackstageToken.Substring(0, 10))..." -ForegroundColor White

Write-Host "`nüîç Verificando componentes com documenta√ß√£o..." -ForegroundColor Yellow

# Listar componentes com documenta√ß√£o
$components = @()
Get-ChildItem -Path $DocsDir -Directory | ForEach-Object {
    $componentName = $_.Name
    $indexFile = Join-Path $_.FullName "index.md"
    
    if (Test-Path $indexFile) {
        $components += $componentName
        Write-Host "   ‚úÖ $componentName - Tem documenta√ß√£o" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è $componentName - Sem documenta√ß√£o (index.md)" -ForegroundColor Yellow
    }
}

Write-Host "`nüìä Componentes encontrados: $($components.Count)" -ForegroundColor Cyan

if ($components.Count -eq 0) {
    Write-Host "‚ùå Nenhum componente com documenta√ß√£o encontrado" -ForegroundColor Red
    exit 1
}

Write-Host "`nüöÄ Executando sincroniza√ß√£o..." -ForegroundColor Green

# Executar script Python
try {
    python .github/scripts/sync_to_backstage.py
    if ($LASTEXITCODE -eq 0) {
        Write-Host "`nüéâ Sincroniza√ß√£o conclu√≠da com sucesso!" -ForegroundColor Green
    } else {
        Write-Host "`n‚ùå Erro na sincroniza√ß√£o" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "`n‚ùå Erro ao executar script Python: $_" -ForegroundColor Red
    exit 1
}

Write-Host "`nüìÑ Verificando resultados..." -ForegroundColor Yellow

# Verificar arquivo de resultados
$resultsFile = "backstage-sync-results.json"
if (Test-Path $resultsFile) {
    $results = Get-Content $resultsFile | ConvertFrom-Json
    Write-Host "`nüìä Resultados da sincroniza√ß√£o:" -ForegroundColor Cyan
    Write-Host "=" * 40 -ForegroundColor Cyan
    
    $successful = 0
    $total = 0
    
    foreach ($component in $results.PSObject.Properties) {
        $total++
        if ($component.Value) {
            $successful++
            Write-Host "   ‚úÖ $($component.Name)" -ForegroundColor Green
        } else {
            Write-Host "   ‚ùå $($component.Name)" -ForegroundColor Red
        }
    }
    
    Write-Host "`nüìà Resumo:" -ForegroundColor Yellow
    Write-Host "   Total: $total" -ForegroundColor White
    Write-Host "   Sucesso: $successful" -ForegroundColor Green
    Write-Host "   Falhas: $($total - $successful)" -ForegroundColor Red
    
    if ($successful -eq $total) {
        Write-Host "`nüéâ Todos os componentes foram sincronizados com sucesso!" -ForegroundColor Green
    } else {
        Write-Host "`n‚ö†Ô∏è Alguns componentes tiveram problemas na sincroniza√ß√£o." -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Arquivo de resultados n√£o encontrado" -ForegroundColor Red
}

Write-Host "`nüîó Pr√≥ximos passos:" -ForegroundColor Yellow
Write-Host "   1. Verifique os componentes no Backstage: $BackstageUrl" -ForegroundColor White
Write-Host "   2. Confirme que a documenta√ß√£o est√° sendo exibida corretamente" -ForegroundColor White
Write-Host "   3. Configure permiss√µes e ownership dos componentes" -ForegroundColor White
Write-Host "   4. Adicione tags e metadados adicionais conforme necess√°rio" -ForegroundColor White

Write-Host "`n‚ú® Sincroniza√ß√£o conclu√≠da!" -ForegroundColor Green
